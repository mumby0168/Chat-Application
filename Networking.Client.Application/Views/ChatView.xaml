<UserControl x:Class="Networking.Client.Application.Views.ChatView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Networking.Client.Application.Views"
             mc:Ignorable="d"           
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:Networking.Client.Application.Converters"
             xmlns:models="clr-namespace:Networking.Client.Application.Models"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Background="{StaticResource MaterialDesignPaper}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <DataTemplate x:Key="TextTemplate" DataType="{x:Type models:ChatMessageModel}">
            <StackPanel Orientation="Vertical">
                <Border Padding="10">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="2"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSent}" Value="True">
                                    <Setter Property="Background" Value="{StaticResource SentMessageBrush}"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSent}" Value="False">
                                    <Setter Property="Background" Value="{StaticResource ReceivedMessageBrush}"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="{Binding Message}"></TextBlock>
                    </StackPanel>
                </Border>
                <Separator/>
                <TextBlock Text="{Binding TimeStamp, StringFormat={}{0:MM/dd/yyyy hh:mm tt}}"></TextBlock>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ImageTemplate" DataType="{x:Type models:ImageMessageModel}">
            <StackPanel>
                <md:PackIcon VerticalAlignment="Top" HorizontalAlignment="Left" Kind="Image"></md:PackIcon>
                <StackPanel Orientation="Vertical">
                    <Image Width="100" Height="100" Source="{Binding Path=ImageData, Converter={StaticResource ByteArrayToBitMapConverter}}"></Image>
                    <Separator Margin="0,7"/>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="Send" Margin="5,0">
                            <md:PackIcon.Style>
                                <Style TargetType="md:PackIcon">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSent}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSent}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                            <Setter Property="Foreground" Value="{StaticResource SentMessageBrush}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </md:PackIcon.Style>
                        </md:PackIcon>
                        <md:PackIcon Kind="Envelope" Margin="5,0">
                            <md:PackIcon.Style>
                                <Style TargetType="md:PackIcon">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSent}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSent}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                            <Setter Property="Foreground" Value="{StaticResource ReceivedMessageBrush}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </md:PackIcon.Style>
                        </md:PackIcon>
                        <TextBlock Text="{Binding TimeStamp, StringFormat={}{0:MM/dd/yyyy hh:mm tt}}"></TextBlock>
                    </StackPanel>
                    
                    </StackPanel>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <GroupBox Header="Chat Area" Margin="5">
    <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3.5*"/>
                <RowDefinition/>
        </Grid.RowDefinitions>

            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Bottom"  Visibility="{Binding Path=IsTyping, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <ContentPresenter.Content>
                    <StackPanel Orientation="Horizontal">
                        <md:PackIcon Kind="Keyboard" FontSize="22"></md:PackIcon>
                    </StackPanel>
                </ContentPresenter.Content>
            </ContentPresenter>    

          

            <ListView ItemsSource="{Binding ChatMessages, UpdateSourceTrigger=PropertyChanged}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="IsHitTestVisible" Value="False"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSent}" Value="True">
                                <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSent}" Value="False">
                                <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplateSelector>
                    <converters:ChatTypeTemplateSelector></converters:ChatTypeTemplateSelector>
                </ListView.ItemTemplateSelector>
            </ListView>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Separator VerticalAlignment="Top" Grid.ColumnSpan="2"></Separator>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <md:TransitioningContent 
                        Visibility="{Binding Path=IsErrorVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                        OpeningEffect="{md:TransitionEffect SlideInFromLeft}"
                        
                        >
                        <StackPanel  Orientation="Horizontal">
                            <md:PackIcon VerticalAlignment="Center" Kind="Warning" Foreground="IndianRed"></md:PackIcon>
                            <TextBlock VerticalAlignment="Center" Margin="5,0" Foreground="IndianRed" Text="{Binding Path=ErrorMessage, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                        </StackPanel>
                    </md:TransitioningContent>

                    <md:Badged Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Badge="{Binding Path=ImageCount, UpdateSourceTrigger=PropertyChanged}">
                        <md:PopupBox                            
                            PlacementMode="TopAndAlignCentres">
                            <ItemsControl ItemsSource="{Binding Path=Images, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Image Width="100" Height="100" Source="{Binding Converter={StaticResource ByteArrayToBitMapConverter}}"></Image>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </md:PopupBox>
                    </md:Badged>

                    <TextBox Grid.Row="2" Style="{StaticResource MaterialDesignFloatingHintTextBox}" md:HintAssist.Hint="Please enter your message." AcceptsReturn="True" TextWrapping="Wrap"  Text="{Binding Path=Message, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyDown">
                                <i:InvokeCommandAction Command="{Binding KeyDownCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Grid>


                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Button Command="{Binding Path=SelectImageCommand}" VerticalAlignment="Bottom">
                        <md:PackIcon VerticalAlignment="Bottom" Kind="PhotoLibrary"></md:PackIcon>
                    </Button>

                    <Button Command="{Binding SendMessageCommand}" Margin="5,0" Grid.Column="1" Content="Send" VerticalAlignment="Bottom"></Button>
                </Grid>

            
        </Grid>

    </Grid>
    </GroupBox>
</UserControl>
